* Combine the old Session object with pywsgi.Request somehow.
* Make the header and footer templates work.

* Simplify the WikiPage controller as much as humanly possible.
* Simplify other extensions by making use of the new controller features.
* Move plugin templates into a dedicated subdirectory.
* Change the ExtensionController such that it automatically falls back to
a matching template if a matching method does not exist.
* Change the ExtensionController such that it automatically shows a database
resource if neither a template nor a method exist.
* Change the SpiffExtension class to use a default controller if a controller
was not defined.
* Find better place for the Controller.py:check_cache() function.
* Write a replacement for Python dictionaries that supports a maximum size,
and use that for limiting the cache size everywhere.
* Make the layout table styleable (and style it).

PageEditor
----------
* Ask before deleting a page.
* Add a way to initialize the canvas using a layout language.
* Add support for restoring the layout.
* Make the list of available extensions more pretty and use an icon.

Extensions
----------
* Add a width recommendation attribute to the XML.
* Add an icon file attribute to the XML.
* Create an admin GUI for installing extensions.
* Implement a Menu extension.
* Create a NavigationBar ("breadcrumbs") extension.
* Implement a RecentChanges extension.
* Implement a MenuBar extension.

User Manager
------------
* Test better whether the permission escalation prevention works.

WikiPage
--------
* Make it easier for other plugins to use the wiki. For example,
  the items in the Guestbook plugin should be displayed using versioned Wiki
  markup, with features like embedded images coming for free. This is
  currently hard to do and requires a lot of code duplication.
